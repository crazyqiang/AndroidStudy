apply plugin: 'com.android.application'

//获取时间戳  交付pipeline
def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmm')
    return formattedDate
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "org.ninetripods.mq.study"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        vectorDrawables.useSupportLibrary = true
        buildConfigField "boolean", "IS_SHOW_LOG", "false"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
//        ndk {
//            abiFilters 'armeabi-v7a', 'armeabi'
//        }

    }
    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src/main/aidl']
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            buildConfigField "boolean", "IS_SHOW_LOG", NOT_SHOW_LOG
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            buildConfigField "boolean", "IS_SHOW_LOG", SHOW_LOG
        }
        preview {
            minifyEnabled false
            buildConfigField "boolean", "IS_SHOW_LOG", SHOW_LOG
        }
    }
    productFlavors {
        market_meizu {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "meizu"]
        }
        market_xiaomi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "meizu"]
        }
        market_huawei {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "huawei"]
        }
        market_wandoujia {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "wandoujia"]
        }
        market_yingyongbao {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "yingyongbao"]
        }
        market_360 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "360"]
//            ndk {
//                abiFilters 'armeabi'
//            }
        }
    }

    //修改APK生成名字  通过android.applicationVariants索引来遍历所有的 build variant
    applicationVariants.all { variant ->
        variant.outputs.each { output ->

            def timeNow = getDate()
            def newName
            if (variant.buildType.name.equals('debug')) {
                newName = "android-" + timeNow + "_v${variant.versionName}-debug.apk"
            } else {
                newName = "android_${variant.flavorName}_" + timeNow + "_v${variant.versionName}_${variant.buildType.name}.apk"
            }
            output.outputFile = new File(output.outputFile.parent, newName)
        }
    }
//    externalNativeBuild {
//        cmake {
//            path 'CMakeLists.txt'
//        }
//    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //汉字转拼音，通讯录 https://github.com/promeG/TinyPinyin
    // TinyPinyin核心包，约80KB
    // 可选，适用于Android的中国地区词典
    compile 'com.android.support:design:25.2.0'
    compile 'com.android.support:appcompat-v7:25.2.0'
    compile 'com.android.support:recyclerview-v7:25.2.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.github.promeg:tinypinyin:2.0.3'
    compile 'com.github.promeg:tinypinyin-lexicons-android-cncity:2.0.3'
    testCompile 'junit:junit:4.12'
}
